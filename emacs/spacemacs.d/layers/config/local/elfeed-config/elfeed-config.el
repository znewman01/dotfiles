(require 'elfeed)
(provide 'elfeed-config)

(setq elfeed-feeds
      '(("http://bristolcrypto.blogspot.com/feeds/posts/default")
        ("https://www.schneier.com/blog/atom.xml")
        ("https://www.mattblaze.org/blog/rss20.xml")
        ("https://blog.cryptographyengineering.com/feed/")
        ("https://blog.techorganic.com/atom.xml")
        ("https://joy.recurse.com/feed.atom")
        ("https://blog.erratasec.com/feeds/posts/default?alt=rss")
        ("http://barrebas.github.io/atom.xml")
        ("http://paperpools.blogspot.com/feeds/posts/default")
        ("http://lambda-the-ultimate.org/rss.xml")
        ("http://feeds.feedburner.com/Fsharpforfunandprofit?format=xml")
        ("https://blog.acolyer.org/feed/")
        ("http://eprint.iacr.org/rss/rss.xml")
        ("https://slatestarcodex.com/feed/")
        ("http://www.christianmoscardi.com/feed.xml")
        ("https://www.scottaaronson.com/blog/?feed=rss2")))

; Instapaper + Elfeed
(defun add-to-instapaper (url)
  (call-process "~/bin/instapaper.py" nil nil nil url))

(defun add-elfeed-entry-to-instapaper ()
  (interactive)
  (let ((entry (elfeed-search-selected :single)))
    (if (not (= 0 (add-to-instapaper (elfeed-entry-link entry))))
        (message "Error adding to Instapaper!")
      (message "Added to Instapaper: %s" (elfeed-entry-title entry))
      (elfeed-untag entry 'unread)
      (elfeed-search-update-entry entry)
      (unless (use-region-p) (forward-line)))))
(define-key elfeed-search-mode-map "i" #'add-elfeed-entry-to-instapaper)

(defun add-elfeed-shown-to-instapaper ()
  (interactive)
  (if (not (= 0 (add-to-instapaper (elfeed-entry-link elfeed-show-entry))))
      (message "Error adding to Instapaper!")
    (message "Added to Instapaper: %s" (elfeed-entry-title elfeed-show-entry))))
(define-key elfeed-show-mode-map "i" #'add-elfeed-shown-to-instapaper)
