diff --git a/pkg/make/builder.go b/pkg/make/builder.go
index a1f9745..8812efe 100644
--- a/pkg/make/builder.go
+++ b/pkg/make/builder.go
@@ -482,7 +482,7 @@ func (b *Builder) BuildCmd(src, appName string) func(context.Context) error {
 			"arch", b.arch,
 		)
 
-		baseArgs := []string{"build", "-o", output}
+		baseArgs := []string{"build", "-o", output, "-trimpath"}
 		if b.race {
 			baseArgs = append(baseArgs, "-race")
 		}
@@ -510,14 +510,22 @@ func (b *Builder) BuildCmd(src, appName string) func(context.Context) error {
 				v = fmt.Sprintf("%s-fakedata", v)
 			}
 
-			branch, err := b.execOut(ctx, "git", "rev-parse", "--abbrev-ref", "HEAD")
-			if err != nil {
-				return errors.Wrap(err, "git for branch")
+			var branch string
+			branch, found := os.LookupEnv("GIT_BRANCH")
+			if !found {
+				branch, err = b.execOut(ctx, "git", "rev-parse", "--abbrev-ref", "HEAD")
+				if err != nil {
+					return errors.Wrap(err, "git for branch")
+				}
 			}
 
-			revision, err := b.execOut(ctx, "git", "rev-parse", "HEAD")
-			if err != nil {
-				return errors.Wrap(err, "git for revision")
+			var revision string
+			revision, found = os.LookupEnv("GIT_SHA")
+			if !found {
+				revision, err = b.execOut(ctx, "git", "rev-parse", "HEAD")
+				if err != nil {
+					return errors.Wrap(err, "git for revision")
+				}
 			}
 
 			usr, err := user.Current()
@@ -587,9 +595,14 @@ func (b *Builder) BuildCmd(src, appName string) func(context.Context) error {
 // strings.TrimPrefix, but there is some additional sanity checking
 // with a regex.
 func (b *Builder) getVersion(ctx context.Context) (string, error) {
-	gitVersion, err := b.execOut(ctx, "git", "describe", "--tags", "--always", "--dirty")
-	if err != nil {
-		return "", errors.Wrap(err, "git describe")
+	var gitVersion string
+	var err error
+	gitVersion, found := os.LookupEnv("GIT_VERSION")
+	if !found {
+		gitVersion, err = b.execOut(ctx, "git", "describe", "--tags", "--always", "--dirty")
+		if err != nil {
+			return "", errors.Wrap(err, "git describe")
+		}
 	}
 
 	// The `-` is included in the "additional" part of the regex,
